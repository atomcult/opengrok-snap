#!/bin/bash

echo -e "${SNAP_INSTANCE_NAME} - a wicked fast source browser\n"
echo -e "Make sure you have connected all interfaces, check more by calling $ snap connections ${SNAP_INSTANCE_NAME}"

echo -e "Suppported applications:"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.add-project"
echo -e "\t\tHelper to add new prokect to the index."
echo -e "\t\tFirst project is added using projadm, then indexed with indexer"
echo -e "\t\tand finally index config is replaced with new one and webapp is redeployed"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.config-merge"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-config-merge"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.config-merge --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.deploy"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-deploy"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.deploy --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.groups"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-groups"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.groups --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.help"
echo -e "\t\tThis help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.index-all"
echo -e "\t\tHelper to index all the project in src root directory"
echo -e "\t\topengrok-indexer is used with appropriatery parameters"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.indexer"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-indexer"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.indexer --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.java"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-java"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.java --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.mirror"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-mirror"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.mirror --help"

echo -e "\t${SNAP_INSTANCE_NAME}.projadm"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-projadm"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.projadm --help"

echo -e "\t${SNAP_INSTANCE_NAME}.reindex-project"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-reindex-project"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.reindex-project --help"

echo -e "\t${SNAP_INSTANCE_NAME}.sync"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-sync"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.sync --help"

echo -e "\t${SNAP_INSTANCE_NAME}.update-source"
echo -e "\t\tHelper script to invoke update source helper"
echo -e "\t\tThere is default src-updater script wich takes input from two locations"
echo -e "\t\t-snap configuration under \"source.*\""
echo -e "\t\t\tSee configured sources with $ snap get -d ${SNAP_INSTANCE_NAME} sources"
echo -e "\t\t-\"${SNAP_COMMON}/source.conf\" config file"
echo -e ""
echo -e "\t\tExample to configure source through snap config"
echo -e "\t\t\t$ snap set ${SNAP_INSTANCE_NAME} sources.opengrok='{\"name\":\"opengrok\", \"type\":\"git\", \"url\":\"https://github.com/oracle/opengrok.git\", \"branch\":\"master\"}'"
echo -e "\t\t\t$ snap set ${SNAP_INSTANCE_NAME} sources.core20='{\"name\":\"core20\", \"type\":\"deb\", \"series\":\"focal\", \"debs\":[\"grep\",\"gzip\",\"hostname\"]}'"
echo -e ""
echo -e "\t\tSupported operation in the \"${SNAP_COMMON}/source.conf\" config file:"
echo -e ""
echo -e "\t\tsync_git_branch:"
echo -e "\t\t\tsync single git branch: <project name> <remore server> <branch>"
echo -e "\t\tsync_packages:"
echo -e "\t\t\tsync deb packages list: <project name> <Ubuntu series> package [[package] [package] ......]"
echo -e "\t\tsync_dpkg_list:"
echo -e "\t\t\tsync deb package list from dpkg.list : <project name> <Ubuntu seriest> <path to dpkg.list> [ package(s) to ignore]"
echo -e "\t\tsync_repo_branch:"
echo -e "\t\t\tsync repo branch: <project name> <remore server> <branch>"
echo -e "\t\tsync_single_bzr_branch:"
echo -e "\t\t\tsync single bzr branch: <project name> <remore server> <branch>"
echo -e "\t\tsync_germinate_list:"
echo -e "\t\t\tsync germinate list: <project name> <source list url>"
echo -e ""
echo -e "\t\tExample of config file content:"
echo -e "\t\t\t# OpenGrok"
echo -e "\t\t\tsync_git_branch opengrok https://github.com/oracle/opengrok.git master"
echo -e "\t\t\t# snapd"
echo -e "\t\t\tsync_git_branch snapd https://github.com/snapcore/snapd.git master"
echo -e "\t\t\t# core-20"
echo -e "\t\t\tsync_dpkg_list core-20 focal \${SNAP_COMMON}/dpkg-core20.list python3.8"
echo -e ""
echo -e ""
echo -e "\t\tCustom source updater can be provided using 'src-updater' content interface'."
echo -e "\t\tExample of custom source updater is here: https://github.com/kubiko/opengrok-src-updater."

echo -e "\n\n"
echo -e "${SNAP_INSTANCE_NAME} supports settings keys"
echo -e "values can be changed by calling\n$ snap set ${SNAP_INSTANCE_NAME} <key name>='<key value>'"
echo -e "list of supported keys:"

processing_top_key_start() {
    TAB="${TAB}\t"
    echo -e "${TAB}${1}"
}

processing_top_key_end() {
    TAB=${TAB%"\t"}
    echo -e "\n"
}

handle_key_value() {
    key=$1
    shift
    echo -e "${TAB}\t${key}\t$@"
}

# callback function to process one configuration
# apply_config ${key} ${ENV} ${VALUE} ${DEFAULT} "${DESCRIPTION}"
apply_config() {
      echo -e "${TAB}\t${1}:   ${5}"
      if [ "x${3}" == "x" ]; then
          echo -e "${TAB}\t\tNo value set, using default value: '${4}'"
      else
          echo -e "${TAB}\t\tCurrent value set to: '${3}', (default value: '${4}')"
      fi
}


source ${SNAP}/bin/snap-config
read_snap_config

# show source configuration
echo -e "\tSource configuration:"
while read line
do
    process_line $line
done < <(snapctl get -d source | jq -r 'keys[] as $k | "\($k) \(.[$k] )"')

echo -e "${SNAP_INSTANCE_NAME}.tomcat restarts when Tomcat configuration is changed to apply changes\n"
