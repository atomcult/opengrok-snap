#!/bin/bash

echo -e "${SNAP_INSTANCE_NAME} - a wicked fast source browser\n"
echo -e "Make sure you have connected all interfaces, check more by calling $ snap connections ${SNAP_INSTANCE_NAME}"

echo -e "Suppported applications:"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.add-project"
echo -e "\t\tHelper to add new prokect to the index."
echo -e "\t\tFirst project is added using projadm, then indexed with indexer"
echo -e "\t\tand finally index config is replaced with new one and webapp is redeployed"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.config-merge"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-config-merge"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.config-merge --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.deploy"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-deploy"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.deploy --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.groups"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-groups"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.groups --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.help"
echo -e "\t\tThis help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.index-all"
echo -e "\t\tHelper to index all the project in src root directory"
echo -e "\t\topengrok-indexer is used with appropriatery parameters"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.indexer"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-indexer"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.indexer --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.java"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-java"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.java --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.mirror"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-mirror"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.mirror --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.projadm"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-projadm"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.projadm --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.reindex-project"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-reindex-project"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.reindex-project --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.sync"
echo -e "\t\tIvocation of opengrok-tools/bin/opengrok-sync"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.sync --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.import-dpkg-list"
echo -e "\t\tHelper to import source definition from dpkg.list"
echo -e "\t\tFor detailed help run: ${SNAP_INSTANCE_NAME}.import-dpkg-list --help"
echo -e ""
echo -e "\t${SNAP_INSTANCE_NAME}.update-source"
echo -e "\t\tHelper script to invoke update source helper"
echo -e "\t\tThere is default src-updater script wich takes input snap config"
echo -e "\t\t\tSee configured sources with $ snap get -d ${SNAP_INSTANCE_NAME} sources"
echo -e ""
echo -e "\t\tWarning: \"${SNAP_COMMON}/source.conf\" config file has been deprecated and"
echo -e "\t\t\tExisting content from \"${SNAP_COMMON}/source.conf\" has been imported into snap config"
echo -e ""
echo -e "\t\tEach source config has to contain \"name\" and \"type\" fields, plus exta fields based on given type"
echo -e "\t\t\t-name: type string: name of the project"
echo -e "\t\t\t-type: type string: type of given source definition"
echo -e "\t\t\tSupported types:"
echo -e "\t\t\t\t-git:"
echo -e "\t\t\t\t\tSingle git repository"
echo -e "\t\t\t\t\tAdditional configs:"
echo -e "\t\t\t\t\t\turl:"
echo -e "\t\t\t\t\t\t\ttype string: repository url"
echo -e "\t\t\t\t\t\tbranch:"
echo -e "\t\t\t\t\t\t\ttype string: repository branch"
echo -e "\t\t\t\t-bzr:"
echo -e "\t\t\t\t\tBazaar repository"
echo -e "\t\t\t\t\tAdditional configs:"
echo -e "\t\t\t\t\t\turl:"
echo -e "\t\t\t\t\t\t\ttype string: repository url"
echo -e "\t\t\t\t\t\tbranch:"
echo -e "\t\t\t\t\t\t\ttype string: repository branch"
echo -e "\t\t\t\t-repo:"
echo -e "\t\t\t\t\tRepo repository"
echo -e "\t\t\t\t\tAdditional configs:"
echo -e "\t\t\t\t\t\turl:"
echo -e "\t\t\t\t\t\t\ttype string: repository url"
echo -e "\t\t\t\t\t\tbranch:"
echo -e "\t\t\t\t\t\t\ttype string: repository branch"
echo -e "\t\t\t\t-deb:"
echo -e "\t\t\t\t\tList of deb packages:"
echo -e "\t\t\t\t\tAdditional configs:"
echo -e "\t\t\t\t\t\tdebs:"
echo -e "\t\t\t\t\t\t\ttype string array: list of deb packages"
echo -e "\t\t\t\t\t\tseries:"
echo -e "\t\t\t\t\t\t\ttype string: ubuntu series"
echo -e "\t\t\t\t\t\tignore-packages:"
echo -e "\t\t\t\t\t\t\ttype string array: list of source packages to ignore"
echo -e "\t\t\t\t-germinate:"
echo -e "\t\t\t\t\tCollection of germinate lists"
echo -e "\t\t\t\t\tAdditional configs:"
echo -e "\t\t\t\t\t\turl:"
echo -e "\t\t\t\t\t\t\ttype string: base germinate url"
echo -e "\t\t\t\t\t\tgerminate-lists:"
echo -e "\t\t\t\t\t\t\ttype string array: list of germinate list, without base url"
echo -e "\t\t\t\t\t\tignore-packages:"
echo -e "\t\t\t\t\t\t\ttype string array: list of source packages to ignore"
echo -e ""
echo -e "\t\tExample to configure source through snap config"
echo -e "\t\t\t$ snap set ${SNAP_INSTANCE_NAME} sources.opengrok='{\"name\":\"opengrok\", \"type\":\"git\", \"url\":\"https://github.com/oracle/opengrok.git\", \"branch\":\"master\"}'"
echo -e "\t\t\t$ snap set ${SNAP_INSTANCE_NAME} sources.core20='{\"name\":\"core20\", \"type\":\"deb\", \"series\":\"focal\", \"debs\":[\"grep\",\"gzip\",\"python3-newt\"], \"ignore-packages\":[\"newt\"]}'"
echo -e "\t\t\t$ snap set ${SNAP_INSTANCE_NAME} sources.core20='{\"name\":\"core20\", \"type\":\"germinate\",  \"url\":\"https://people.canonical.com/~ubuntu-archive/germinate-output/ubuntu.focal\", \"germinate-lists\":[\"server\", \"server.seed\"], \"ignore-packages\":[\"newt\"]}'"
echo -e ""
echo -e "\t\t\tThere is helper included to import list of deb packafes from dpkg.list"
echo -e "\t\t\t$ cat /snap/core20/current/usr/share/snappy/dpkg.list | sudo ${SNAP_INSTANCE_NAME}.import-dpkg-list <project name> <Ubuntu series> [list of source packages to ignore]"
echo -e ""
echo -e "\t\tCustom source updater can be provided using 'src-updater' content interface'."
echo -e "\t\tExample of custom source updater is here: https://github.com/kubiko/opengrok-src-updater."

echo -e "\n\n"
echo -e "${SNAP_INSTANCE_NAME} supports settings keys"
echo -e "values can be changed by calling\n$ snap set ${SNAP_INSTANCE_NAME} <key name>='<key value>'"
echo -e "list of supported keys:"

processing_top_key_start() {
    TAB="${TAB}\t"
    echo -e "${TAB}${1}"
}

processing_top_key_end() {
    TAB=${TAB%"\t"}
    echo -e "\n"
}

handle_key_value() {
    key=$1
    shift
    echo -e "${TAB}\t${key}\t$@"
}

# callback function to process one configuration
# apply_config ${key} ${ENV} ${VALUE} ${DEFAULT} "${DESCRIPTION}"
apply_config() {
      echo -e "${TAB}\t${1}:   ${5}"
      if [ "x${3}" == "x" ]; then
          echo -e "${TAB}\t\tNo value set, using default value: '${4}'"
      else
          echo -e "${TAB}\t\tCurrent value set to: '${3}', (default value: '${4}')"
      fi
}


source ${SNAP}/bin/snap-config
read_snap_config

# show source configuration
echo -e "\tSource configuration:"
while read line
do
    process_line $line
done < <(snapctl get -d source | jq -r 'keys[] as $k | "\($k) \(.[$k] )"')

echo -e "\n\n"
echo -e "${SNAP_INSTANCE_NAME}.tomcat restarts when Tomcat configuration is changed to apply changes\n"
