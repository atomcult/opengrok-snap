#!/bin/bash


add_ssh_key() {
    ssh-add -l | grep -q `ssh-keygen -lf ${1} | awk '{print $2}'` || ssh-add ${1}
}

# check what is real home for current user
if [ -f "/etc/passwd" ] &&  [ "$(du /etc/passwd | cut -c -1)" != "0" ] ; then
    SSH_DIR=$(grep ${USER} /etc/passwd | awk -F ":" '{ print $6}')/.ssh
fi

if [ -f "/var/lib/extrausers/passwd" ] && [ "$(du /var/lib/extrausers/passwd | cut -c -1)" != "0" ] ; then
    SSH_DIR=$(grep ${USER} /var/lib/extrausers/passwd | awk -F ":" '{ print $6}')/.ssh
fi

[ "${DEBUG}" = "1" ] && echo "SSH_DIR=${SSH_DIR}"

# callback function to process one configuration
# apply_config ${key} ${ENV} ${VALUE} ${DEFAULT} ${DESCRIPTION}
apply_config() {
    local VAL=${3}
    [ -z "${VAL}" ] && VAL=${4}
    if [ "${DEBUG}" = "1" ]; then
        echo "${2}=${VAL}"
    fi
    eval export ${2}=\"${VAL}\"
}

# read settings
source ${SNAP}/bin/snap-config
read_snap_config

[ "${DEBUG}" = "1" ] && echo "making sure keys are loaded"
for k in $(echo ${SSH_KEY_NAMES} | tr "," "\n")
do
    [ "${DEBUG}" = "1" ] && echo "Processing key '${k}'"
    # check if key is full path or filename
    if [ -f ${k} ]; then
        add_ssh_key ${k}
    elif [ -d "${SSH_DIR}" ] && [ -f ${SSH_DIR}/${k} ]; then
        add_ssh_key ${SSH_DIR}/${k}
    else
        [ "${DEBUG}" = "1" ] && echo "Key '${k}' is neither valid full path or key under '${SSH_DIR}', ignoring it"
    fi
done


# before runing any task, copy configurations to temp locaton where SNAP, SNAP_DATA, SNAP_COMMON can be updated
cp -r ${SNAP_COMMON}/logging.properties /tmp
cp -r ${SNAP_COMMON}/scripts /tmp
find /tmp -type f | \
  xargs sed -i -e 's#${SNAP}#'"${SNAP}"'#g' \
               -e 's#${SNAP_COMMON}#'"${SNAP_COMMON}"'#g' \
               -e 's#${SNAP_DATA}#'"${SNAP_DATA}"'#g' \
               -e 's#${HTTP_PORT}#'"${HTTP_PORT}"'#g' \
               -e 's#${WEBAPP_NAME}#'"${WEBAPP_NAME}"'#g'
