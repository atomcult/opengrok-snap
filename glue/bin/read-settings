#!/bin/bash


# helper function to start own ssh-agent
function start_agent {
    ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo "ssh-agent succeefully started"
    chmod 600 ${SSH_ENV}
    . ${SSH_ENV} > /dev/null
    if [ -e "${SSH_DIR}/id_rsa" ]; then
        ssh-add;
    else
        echo "There is no identity under ${SSH_DIR} to be added, you might want to add it"
    fi
}

# check what is real home for current user
if [ -f "/etc/passwd" ] &&  [ "$(du /etc/passwd | cut -c -1)" != "0" ] ; then
    SSH_DIR=$(grep ${USER} /etc/passwd | awk -F ":" '{ print $6}')/.ssh
fi

if [ -f "/var/lib/extrausers/passwd" ] && [ "$(du /var/lib/extrausers/passwd | cut -c -1)" != "0" ] ; then
    SSH_DIR=$(grep ${USER} /var/lib/extrausers/passwd | awk -F ":" '{ print $6}')/.ssh
fi


if [ -d "${SSH_DIR}" ]; then
    # Source SSH settings, if applicable
    if [ -f "${SSH_ENV}" ]; then
        unset SSH_AGENT_PID
        unset SSH_AUTH_SOCK
        . ${SSH_ENV} > /dev/null
        if [ -z "${SSH_AGENT_PID}" ] || [ "x$(ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent)" = "x" ]; then
           start_agent;
        fi
    else
        start_agent
    fi
# else
#    echo "There no ${SSH_DIR} no need for ssh-agent"
fi


# read settings
source ${SNAP}/bin/config
for key in ${keys[@]}
do
    default_value="DEFAULT_$key"
    description="DESCRIPTION_$key"
    snappy_key="KEY_$key"
    value=$(snapctl get ${!snappy_key})
    if [ "x$value" == "x" ]; then
        echo -e "$key=${!default_value} (default value)"
        export $key=${!default_value}
    else
        echo -e "$key=$value"
        export $key=$value
    fi
done


# before runing any task, copy configurations to temp locaton where SNAP, SNAP_DATA, SNAP_COMMON can be updated
cp -r ${SNAP_COMMON}/logging.properties /tmp
cp -r ${SNAP_COMMON}/scripts /tmp
find /tmp -type f | \
  xargs sed -i -e 's#${SNAP}#'"${SNAP}"'#g' \
               -e 's#${SNAP_COMMON}#'"${SNAP_COMMON}"'#g' \
               -e 's#${SNAP_DATA}#'"${SNAP_DATA}"'#g' \
               -e '#${HTTP_PORT}#'"${HTTP_PORT}"'#g' \
               -e '#${WEBAPP_NAME}#'"${WEBAPP_NAME}"'#g'
