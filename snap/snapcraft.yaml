name: opengrok
summary: OpenGrok is a fast and usable source code search and cross reference engine
description: |
 OpenGrok is a fast and usable source code search and cross reference engine, written in Java.
 It helps you search, cross-reference and navigate your source tree. It can understand various 
 program file formats and version control histories of many source code management systems.

confinement: strict
grade: stable
adopt-info: opengrok
base: core18

plugs:
  source-location:
    interface: content
    target: $SNAP_COMMON/src
  data-location:
    interface: content
    target: $SNAP_COMMON/data
  src-updater:
    interface: content
    target: $SNAP/src-updater

slots:
  source-share:
    interface: content
    write:
      - $SNAP_COMMON/src
  tools:
    interface: content
    read:
      - $SNAP/usr

environment:
    JAVA_HOME:        "$SNAP/usr/lib/jvm/default-java"
    PATH:             "$SNAP/usr/sbin:$SNAP/usr/bin:$SNAP/sbin:$SNAP/bin:$SNAP/usr/lib/jvm/default-java/bin:$SNAP/usr/lib/jvm/default-java/jre/bin:$SNAP/opengrok-tools/bin:$PATH"
    LD_LIBRARY_PATH:  "$SNAP/lib/${SNAPCRAFT_ARCH_TRIPLET}:$SNAP_LIBRARY_PATH:$LD_LIBRARY_PATH:$SNAP/lib:$SNAP/usr/lib:$SNAP/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}"
    SSH_ENV:          "${SNAP_USER_COMMON}/ssh-environment"
    SNAP_SHM_PREFIX:   "snap.${SNAP_INSTANCE_NAME}."

passthrough:
    layout:
        /usr/lib/git-core:
            bind: $SNAP/usr/lib/git-core
        /usr/share/git-core:
            bind: $SNAP/usr/share/git-core

apps:
    opengrok:
        command: bin/command.opengrok
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    config-merge:
        command: bin/command.opengrok-config-merge
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    deploy:
        command: bin/command.opengrok-deploy
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    groups:
        command: bin/command.opengrok-groups
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    indexer:
        command: bin/command.opengrok-indexer
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    java:
        command: bin/command.opengrok-java
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    mirror:
        command: bin/command.opengrok-mirror
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    projadm:
        command: bin/command.opengrok-projadm
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    reindex-project:
        command: bin/command.opengrok-reindex-project
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    sync:
        command: bin/command.opengrok-sync
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe
            - process-control
            - system-observe

    help:
       command: bin/snap-help
       adapter: none

    tomcat:
        command: bin/tomcat-control
        daemon: simple
        plugs:
            - network-bind
            - removable-media
            - mount-observe
        environment:
            # installation pathes are based of CATALINA_HOME
            CATALINA_HOME: $SNAP
            # writable pathes are based of CATALINA_BASE
            CATALINA_BASE:   $SNAP_COMMON
            CATALINA_PID:    ${SNAP_DATA}/tomcat.pid
            CATALINA_TMPDIR: /tmp

    index-sync-daemon:
        command: bin/command.opengrok-sync
        daemon: simple
        passthrough:
            timer: 00:30~01:00
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe

    update-source:
        command: bin/update-src
        adapter: none
        plugs:
            - network-bind
            - home
            - removable-media
            - ssh-keys
            - mount-observe

parts:
    tomcat:
        plugin: ant
        source: https://github.com/apache/tomcat.git
        source-type: git
        source-tag: 8.5.38
        ant-openjdk-version: "11"
        override-build: |
            snapcraftctl build
            cp -r output/build/* $SNAPCRAFT_PART_INSTALL
        stage:
            - -usr/lib/jvm

    opengrok:
        plugin: maven
        source: https://github.com/OpenGrok/OpenGrok.git
        source-type: git
        source-tag: '1.1.2'
        # source-branch: master
        maven-openjdk-version: "11"
        maven-options:
            - -DskipTests=true
            - -Dmaven.javadoc.skip=false
            - -B
            - -V
        maven-targets:
            - plugins
        build-packages:
            - xmlstarlet
            - libxml2-utils
            - subversion
            - python3-venv
            - python3-pip
        override-build: |
            snapcraftctl build
            echo "opengrok built successfully"
            snapcraftctl set-version $(git describe --tags)
            mkdir -p ${SNAPCRAFT_PART_INSTALL}/dist ${SNAPCRAFT_PART_INSTALL}/src-updater
            tar -xf distribution/target/opengrok-*.tar.gz -C ${SNAPCRAFT_PART_INSTALL}/dist/ --strip-components=1
            sed -i 's#java.util.logging.FileHandler.pattern = #java.util.logging.FileHandler.pattern = ${SNAP_COMMON}/logs/#g' \
                ${SNAPCRAFT_PART_INSTALL}/dist/doc/logging.properties
            # mkdir -p ${SNAPCRAFT_PART_INSTALL}/opengrok-tools
            # PYTHONUSERBASE=${SNAPCRAFT_PART_INSTALL}/opengrok-tools python3 -m pip install --no-cache-dir ${SNAPCRAFT_PART_INSTALL}/dist/tools/opengrok-tools.tar.gz
            cd ${SNAPCRAFT_PART_INSTALL}
            python3 -m venv opengrok-tools
            cd opengrok-tools
            bin/python3 -m pip install --no-cache-dir ${SNAPCRAFT_PART_INSTALL}/dist/tools/opengrok-tools.tar.gz
            ln -sf ../../usr/bin/python3 bin/python3

    # source control tools
    tools:
        plugin: nil
        stage-packages:
            - bzr
            - cvs
            - git
            - gitk
            - openssh-client
            - mercurial
            - monotone
            - rcs
            - cssc
            - subversion
            - coreutils
            - curl
            - procps
            - python3
        organize:
            usr/share/bash-completion/completions/git: git-completion.bash

    # helper scripts
    glue:
        source: glue
        plugin: dump
        stage-packages:
            - jq

    universal-ctags:
        plugin: autotools
        build-packages:
            - pkg-config
        source: https://github.com/universal-ctags/ctags.git

    libc-shm-shim:
        plugin: nil
        override-build: |
            # beta channel has binary for core18, edge for core16
            [ -z "$(dpkg -l | grep "libc-bin" | awk '{print $3}' | grep 2.27)" ] && channel="edge" || channel="beta"
            snap download libc-shm-shim --${channel}
            unsquashfs -f -d ${SNAPCRAFT_PART_INSTALL} libc-shm-shim_*.snap
        build-packages:
            - squashfs-tools
        stage:
            - -meta
            - -snap

