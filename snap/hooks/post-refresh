#!/bin/bash

hook_name="$(basename $0)"
logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}: hook start"

# run common part of the hook
${SNAP}/bin/snap-hooks-common

# clean ssh-agent.socket
[ -e ${SNAP_DATA}/ssh-agent.socket ] && rm ${SNAP_DATA}/ssh-agent.socket

# upgrading OpenGrok often corrupts indexed history between major version
# The versioning scheme used is x.y.z, where a change in y constitutes major release;
# if only z changes, this is minor release and index does not need to be rebuilt
# more info: https://github.com/oracle/opengrok/wiki/Indexing-lifecycle
# since index rebuild can be expensive operation, this is optional operation
# though enabled by default
#
# Additionally we rebuild index if old or new version is snapshot, as those are
# nightly builds without guarantee
auto_rebuild="$(snapctl get opengrok.auto-rebuild-index)"
# if not defined use default
[ -z "${auto_rebuild}" ] && auto_rebuild=$(jq -r '.opengrok."auto-rebuild-index".default' ${SNAP}/etc/snap-configuration.json)
previous_version="$(snapctl get last-opengrok-version)"
if [ "${auto_rebuild}" = "ON" ]; then
    if [ "${SNAP_VERSION}" = "${previous_version}" ]; then
        forced_reindex="no"
    # check for snapshot build
    elif [ "${SNAP_VERSION#*-}" != "${SNAP_VERSION}" ] ||
         [ "${previous_version#*-}" != "${previous_version}" ]; then
         # one of the versions is snapshot
         forced_reindex="yes"
    # check for major version change or if any version is snapshot
    elif [ "${SNAP_VERSION%.*}" = "${previous_version%.*}" ]; then
        # major versions are same
        forced_reindex="no"
    else
        # major version differers -> rebuild index
        forced_reindex="yes"
    fi
    snapctl set forced-reindex="${forced_reindex}"
    logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}: Rebuilding the index: forced-reindex: ${forced_reindex}, previous version: ${previous_version}, current version: ${SNAP_VERSION}"
    snapctl start ${SNAP_INSTANCE_NAME}.rebuild-index-helper &
else
    # auto rebuild is disabled
    logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}: Not rebuild the index. (auto-rebuld: ${auto_rebuild}, versions: [${SNAP_VERSION}]/[${previous_version}])"
    snapctl stop --disable ${SNAP_INSTANCE_NAME}.rebuild-index-helper
fi
snapctl unset last-opengrok-version

# parse source config file if it exist and import it to snap config
if [ -f "${SNAP}/src-updater/update-source" ]; then
    logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}: sourcing '$SNAP/src-updater/update-source'"
    source ${SNAP}/src-updater/update-source
    if [ -z "$(type import_definition_from_source_config 2> /dev/null)" ]; then
        logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}:''update-source' helper is missing 'import_definition_from_source_config' function"
        logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}: Ignoring the call"
    else
        import_definition_from_source_config
    fi
else
    logger "snap.${SNAP_INSTANCE_NAME}.hook.${hook_name}: Missing 'update-source' helper, skipping import"
fi